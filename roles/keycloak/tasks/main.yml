# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

---
- name: Install Packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - corosync
    - pacemaker
  when: "inventory_hostname in groups[controllers]"

- name: Installs pacemaker-remote
  ansible.builtin.package:
    name: "pacemaker-remote"
    state: present
  when: "inventory_hostname in groups[computes]"

- name: Generates corosync key
  become: true
  become_user: root
  command: corosync-keygen
  args:
    creates: /etc/corosync/authkey
  when: inventory_hostname == groups[controllers][0]
  notify: Restart corosync

- name: Generate tmpfile for authkey
  tempfile:
    state: file
  register: authkey_tempfile
  changed_when: False
  check_mode: no
  delegate_to: localhost
  when: inventory_hostname != groups[controllers][0]

- name: Fetch authkey for other nodes
  fetch:
    src: /etc/corosync/authkey
    dest: "{{ authkey_tempfile.path }}"
    flat: yes
  delegate_to: "{{ groups[controllers][0] }}"
  changed_when: False
  check_mode: no
  when: inventory_hostname != groups[controllers][0]

- name: Copy authkey to other nodes
  copy:
    src: "{{ authkey_tempfile.path }}"
    dest: /etc/corosync/authkey
    mode: "0400"
  when: inventory_hostname != groups[controllers][0]
  notify: Restart corosync

- name: Clean up tmpdir
  file:
    path: "{{ authkey_tempfile.path }}"
    state: "absent"
  changed_when: False
  check_mode: no
  delegate_to: localhost
  when: inventory_hostname != groups[controllers][0]

- name: Chowns authkeys
  file:
    path: /etc/corosync/authkey
    mode: "0400"
    owner: root
  notify: Restart corosync

- name: Creates corosync config
  template:
    src: corosync.conf.j2
    dest: /etc/corosync/corosync.conf
    mode: "0400"
    owner: root
  notify: Restart corosync

- name: Creates services directory
  file:
    path: /etc/corosync/service.d/
    state: directory
    mode: "0755"

- name: Adds pacemaker service
  copy:
    src: pcmk
    dest: /etc/corosync/service.d/pcmk
    owner: root
    mode: "0400"
  notify: Restart corosync

- name: Adds ferm filtering
  template:
    src: "ferm.j2"
    dest: /etc/ferm/filter-input.d/60_corosync.conf
    mode: "0640"
  when: ferm_enabled | default(false)
  tags: ferm
  notify: Restart ferm
